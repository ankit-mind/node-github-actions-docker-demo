name: CI-CD
on:
  push:
    branches: [main, develop]
jobs:
  push_to_Docker_Hub:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets. DOCKERHUB_USERNAME }}
          password: ${{ secrets. DOCKERHUB_TOKEN }}
      - name: Build and push Production
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ankitbhojani/awsdemo:latest
      - name: Build and push Development
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ankitbhojani/awsdemo_develop:latest
  run_on_container:
    runs-on: ubuntu-latest
    needs: [push_to_Docker_Hub]
    steps:
      - name: Deploy using ssh Production
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            # PROD DEPLOYMENT
            #pull docker image if any changes
            docker pull ankitbhojani/awsdemo:latest
            #run new docker container
            docker run --name deploydocker -d -p 3000:3000 ankitbhojani/awsdemo:latest
            #remove docker container which are running
            docker container rm deploydocker
            exit
      - name: Deploy using ssh development
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            # DEVELOP DEPLOYMENT
            #pull docker image if any changes
            docker pull ankitbhojani/awsdemo_develop:latest
            #run new docker container
            docker run --name deploydocker_develop -d -p 4000:4000 ankitbhojani/awsdemo_develop:latest
            #remove docker container which are not in use
            docker container rm deploydocker_develop
            exit
            
